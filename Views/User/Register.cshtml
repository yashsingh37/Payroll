@model PayRoll_Practies_Exam_2.Models.tblUser

@{
    ViewBag.Title = "Register";
   
   // Layout = "~/Views/Shared/_Layout.cshtml";

}

<center><h2>Registration</h2></center>
<link href="~/everything/allcss/allallall.css" rel="stylesheet" />
<style>
    .error {
        display: none;
        color: red;
    }
</style>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "registerForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @*@Html.LabelFor(model => model.c_userid, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">*@
            @Html.HiddenFor(model => model.c_userid, new { htmlAttributes = new { @class = "form-control" } })
            @*@Html.ValidationMessageFor(model => model.c_userid, "", new { @class = "text-danger" })
                </div>*@
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.c_username, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.c_username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.c_username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.c_email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.c_email, new { htmlAttributes = new { @class = "form-control", @id = "email" } })
                @Html.ValidationMessageFor(model => model.c_email, "", new { @class = "text-danger" })
                <p id="errEmail" class="has-error error">Email is already exists!</p>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.c_gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.RadioButtonFor(model => model.c_gender, "Male", new { htmlAttributes = new { @class = "form-control" } })
                Male
                &nbsp;&nbsp;&nbsp;
                @Html.RadioButtonFor(model => model.c_gender, "Female", new { htmlAttributes = new { @class = "form-control" } })
                Female
                &nbsp;&nbsp;&nbsp;
                @Html.RadioButtonFor(model => model.c_gender, "Other", new { htmlAttributes = new { @class = "form-control" } })
                Other

                @Html.ValidationMessageFor(model => model.c_gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.c_password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.c_password, new { htmlAttributes = new { @class = "form-control", @id = "password" } })
                @Html.ValidationMessageFor(model => model.c_password, "", new { @class = "text-danger" })
                <p id="errPassword" class="has-error error">Password must contain 1 Capital, 1 Special and 1 number!</p>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Register" class="btn btn-default" id="btnSubmit" />
            </div>
        </div>
        <div class="linklink">
            <center>
                <p>
                    Already have an account?
                    @Html.ActionLink("Login Now!", "Login")
                </p>
            </center>
        </div>
    </div>
}

@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">
    $(document).ready(function () {
        $("#btnSubmit").prop('disabled', false);
    });

    $("#email").on('change', function () {
        var settings = {
            "url": "/User/EmailExists?email=" + $('#email').val(),
            "method": "GET",
            "timeout": 0,
            "headers": {
                "Content-Type": "application/json"
            }
        }
        $.ajax(settings).done(function (msg) {
            if (msg == "True") {
                $("#errEmail").css('display', 'block');
                $("#btnSubmit").prop('disabled', true);
            }
            else {
                $("#errEmail").css('display', 'none');
                $("#btnSubmit").prop('disabled', false);
            }
        });
    });

    $("#password").on('change', function () {
        var settings = {
            "url": "/User/ValidatePassword?password=" + $('#password').val(),
            "method": "GET",
            "timeout": 0,
            "headers": {
                "Content-Type": "application/json"
            }
        }
        $.ajax(settings).done(function (msg) {
            if (msg == "True") {
                $("#errPassword").css('display', 'none');
                $("#btnSubmit").prop('disabled', false);
            }
            else {
                $("#errPassword").css('display', 'block');
                $("#btnSubmit").prop('disabled', true);
            }
        });
    });

</script>
